[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["efficient_longctx"]

[project]
name = "efficient-longctx"
version = "0.1.0"
description = "Efficient long-context blocks for training and benchmarking"
readme = "README.md"
requires-python = ">=3.12"
license = {file = "LICENSE"}
authors = [
    {name = "Maida.AI Research Team"},
]
dependencies = [
    "pip",
    "torch~=2.8.0",
    "numpy~=2.3.3",
    "tqdm~=4.67.1",
    "datasets~=4.1.1",
    "transformers~=4.56.2",
    "huggingface_hub~=0.35.3",
    "accelerate~=1.10.1",
    "einops~=0.8.1",
    # "triton~=3.4.0",
    "matplotlib~=3.10.6",
    # FlashAttention
    # "setuptools",
    "flash-attn~=2.8.3",
]

[dependency-groups]
# Put shared dev tools here so "uv sync --group dev" is enough.
dev = [
    "ipython~=9.6.0",
    "pre-commit~=4.3.0",
    "pytest~=8.4.2",
    # "pytest-asyncio",
    "pytest-cov~=7.0.0",
    # "pytest-xdist",
    # "black~=25.9.0",
    "ruff~=0.13.2",
    "isort~=6.1.0",
    # Local package
    "efficient-longctx",
]


[tool.uv]
default-groups = [
    "dev"
]
no-build-isolation-package = [
    "flash-attn"
]

[tool.uv.workspace]
members = [
    ".",
]

[tool.uv.sources]
efficient-longctx = { workspace = true }

# =============
# Lint and Test
# =============

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["efficient_longctx"]

[tool.ruff]
line-length = 88
target-version = "py312"
extend-exclude = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "build",
  "dist",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
